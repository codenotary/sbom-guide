<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer&#39;s Guide to SBOMs</title>
    <link>http://nickanderegg.github.io/sbom-guide/</link>
    <description>Recent content on Developer&#39;s Guide to SBOMs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://nickanderegg.github.io/sbom-guide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>http://nickanderegg.github.io/sbom-guide/sboms/sbom-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/sboms/sbom-intro/</guid>
      <description>Introduction to Software Bills of Materials (SBOMs) # A Software Bill of Materials (SBOM) is a manifest which uniquely identifies and enumerates the software dependencies contained within a codebase, build artifact, or runtime container. A dynamic SBOM can further integrate information from vulnerability scanners to help ensure the integrity of your software supply chain.
What is motivating the need for SBOMs? # To quote President Biden&amp;rsquo;s Executive Order 14028 on Improving the Nation’s Cybersecurity:</description>
    </item>
    
    <item>
      <title>SBOM Concepts</title>
      <link>http://nickanderegg.github.io/sbom-guide/sboms/sbom-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/sboms/sbom-concepts/</guid>
      <description>SBOM Concepts # Improving Transparency # When the dependencies of a software asset are enumerated in an SBOM, it becomes possible to track where artifacts are deployed when new vulnerabilities are discovered. This is especially useful when the SBOM is stored in a searchable database (such as Codenotary Trustcenter).
A software bill of materials is an important part of software supply chain security, because it surfaces the various artifacts that are bundled with a given software asset and enables developers to quickly identify and remove vulnerable components.</description>
    </item>
    
    <item>
      <title>SPDX Documents</title>
      <link>http://nickanderegg.github.io/sbom-guide/sboms/spdx-documents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/sboms/spdx-documents/</guid>
      <description>Documenting Software Artifacts with SBOMs # The Software Package Data Exchange (SPDX) Specification is an open standard for communicating software bill of materials (SBOM) information.
SPDX is an initiative of the Linux Foundation created to develop tools and formats for communicating the licensing information of software packages. Most developers have probably already encountered one specification from SPDX in the form of the SPDX License List, which is &amp;ldquo;a list of commonly found licenses and exceptions used for open source and other collaborative software.</description>
    </item>
    
    <item>
      <title>Software Security</title>
      <link>http://nickanderegg.github.io/sbom-guide/sboms/supply-chain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/sboms/supply-chain/</guid>
      <description>Increasing the Security of Software # When it comes to using SBOMs to keep software secure, there are two main use cases:
Identifying vulnerable components. By enumerating the components contained in a given software artifact, you can identify which components deployed on your infrastructure are vulnerable to known explots. Ensuring the integrity of software components. Likewise, ensuring the integrity of your build artifacts requires keep records that uniquely identify an asset and its provenance.</description>
    </item>
    
    <item>
      <title>CycloneDX Documents</title>
      <link>http://nickanderegg.github.io/sbom-guide/sboms/cyclonedx-documents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/sboms/cyclonedx-documents/</guid>
      <description>Communicating Known Vulnerabilities with SBOMs # We&amp;rsquo;ve already seen how an inventory of components is necessary for establishing the chain of custody of software components, but a manifest of the components used to build a piece of software cannot, by itself, prevent the use of vulnerable components. So far, we&amp;rsquo;ve primarily seen how SBOMs—which are snapshots of asset composition—can be used to ensure the integrity of known software components. But what about the security of those components?</description>
    </item>
    
    <item>
      <title>Introduction to VCN</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/intro/</guid>
      <description>Introduction to vcn # vcn is a command line tool that allows you to interact with Codenotary Trustcenter to notarize and authenticate your software assets. This documentation will guide you through the various ways you can use vcn to help manage the security of your software.
Specifying Assets in vcn Commands # Throughout this documentation, you&amp;rsquo;ll see the placeholder &amp;lt;artifact&amp;gt; used to refer to an asset that you want to authenticate or notarize.</description>
    </item>
    
    <item>
      <title>Notarizing Assets</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/notarizing-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/notarizing-assets/</guid>
      <description>Notarizing Assets # When using vcn with Codenotary Trustcenter, the notarization process creates a cryptographic signature of the asset and stores it in a cryptographically-verifiable immutable database (immudb). That signature can then be used to authenticate the asset and verify its integrity.
Notarize an asset with vcn # The most basic way to notarize an asset is to pass the asset to the vcn notarize command:
vcn notarize &amp;lt;artifact&amp;gt; This command will sign the combination of the asset&amp;rsquo;s name, version, and hash to unique identify it.</description>
    </item>
    
    <item>
      <title>Authenticating Assets</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/authenticating-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/authenticating-assets/</guid>
      <description>Authenticating Assets with Trustcenter # After an asset has been notarized with Codenotary Trustcenter, it can be authenticated to verify the integrity and signature of the asset before deployment to a production environment.
When an asset is authenticated, vcn will verify the integrity of the asset by comparing the hash of an asset with the signed hash stored by Trustcenter. If the hash of the asset matches the signed hash stored by Trustcenter and that asset is marked as Trusted, vcn will return a success message.</description>
    </item>
    
    <item>
      <title>Labeling Assets</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/labeling-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/labeling-assets/</guid>
      <description>Managing Assets with Labels # Codenotary Trustcenter can associate labels with your notarized artifacts to provide an additional level of metadata for authentication. Labels can be used to indicate the intended use of an artifact, such as production, staging, or development. Labels can also be used to indicate the type of artifact, such as library, binary, or container.
Labels can be appended to, deleted from, or overwritten on an artifact when the vcn notarize command is run by passing the --labels-add, --labels-del, or --labels-set flags, as illustrated below.</description>
    </item>
    
    <item>
      <title>Authenticating SBOMs</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/bom-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/bom-authentication/</guid>
      <description>Notarizing and Authenticating Software Bills of Materials (SBOMs) with Trustcenter # When a Software Bill of Materials (SBOM) is notarized by vcn for a container image, codebase, or other build artifact, that asset&amp;rsquo;s entire manifest of dependencies is also notarized and they are immutably associated with one another.
This process creates a chain of custody for the asset and its dependencies, allowing you to check the integrity of the asset, track which artifacts are deployed on your infrastructure, and ensure untrusted dependencies never reach production.</description>
    </item>
    
    <item>
      <title>Authenticating Dependencies</title>
      <link>http://nickanderegg.github.io/sbom-guide/vcn-usage/dependency-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/vcn-usage/dependency-authentication/</guid>
      <description>Authenticating Trusted Dependencies # If we attempt to authenticate a Docker image which has not yet been notarized with our signing key, we receive a warning that the asset hasn&amp;rsquo;t yet been notarized:
❯ vcn authenticate --bom docker://python:3.9-alpine Warning: c9b90024bc4d49b1fa0ea4673b6eb1db1058cd1cba4b840d336bedf803a0afcf was not notarized When we then notarize the image, all of its dependencies are resolved, authenticated with Trustcenter, signed, and marked as Trusted:
❯ vcn notarize --bom image://python:3.9-alpine Your assets will not be uploaded.</description>
    </item>
    
    <item>
      <title>Artifact</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/artifact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/artifact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/authentication/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CAS</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/cas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/cas/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Codenotary</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/codenotary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/codenotary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Community Attestation Service</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/community-attestation-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/community-attestation-service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CycloneDX</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/cyclonedx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/cyclonedx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Manifest</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/manifest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/manifest/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Notarization</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/notarization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/notarization/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Software Bill of Materials</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/sbom/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Software Package Data Exchange</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/spdx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/spdx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Syft</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/syft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/syft/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Trustcenter</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/trustcenter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/trustcenter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>VCN</title>
      <link>http://nickanderegg.github.io/sbom-guide/reference/glossary/vcn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://nickanderegg.github.io/sbom-guide/reference/glossary/vcn/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
